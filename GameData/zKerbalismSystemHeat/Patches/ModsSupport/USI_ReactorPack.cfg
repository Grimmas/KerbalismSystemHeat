// USI Reactors
@PART[USI_Nuke_625]:NEEDS[SystemHeatFissionReactors]:FOR[zzzz_KerbalismSystemHeat]
{
	@cost = 12673
	@entryCost = 25210
	@category = Electrical
	@mass = 0.103

	MODULE
	{
		name = ModuleSystemHeat
		volume = 0.25
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	@RESOURCE[EnrichedUranium]
	{
		@amount = 7
		@maxAmount = 7
	}

	@RESOURCE[DepletedFuel]
	{
		@amount = 0
		@maxAmount = 7
	}

	!RESOURCE[ElectricCharge] {}
	RESOURCE
	{
		name = ElectricCharge
		amount = 36
		maxAmount = 36
	}

	!MODULE[USI_Converter] {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[USI_ModuleFieldRepair] {}
	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
	!MODULE[ModuleResourceConverter] {}
	!MODULE[ProcessController],* {}
	!MODULE[Reliability],* {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 130 0 0
		}
		// Above this temp, risky
		NominalTemperature = 750
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.008

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 25

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 36
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.000000126785
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.000000126785
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[USI_Nuke_125_S]:NEEDS[SystemHeatFissionReactors]:FOR[zzzz_KerbalismSystemHeat]
{
	@cost = 29704
	@entryCost = 74900
	@category = Electrical
	@mass = 0.285

	@RESOURCE[EnrichedUranium]
	{
		@amount = 19
		@maxAmount = 19
	}

	@RESOURCE[DepletedFuel]
	{
		@amount = 0
		@maxAmount = 19
	}

	!RESOURCE[ElectricCharge] {}
	RESOURCE
	{
		name = ElectricCharge
		amount = 100
		maxAmount = 100
	}

	MODULE
	{
		name = ModuleSystemHeat
		volume = 0.5
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[USI_Converter] {}
	!MODULE[USI_ModuleFieldRepair] {}
	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
	!MODULE[ModuleResourceConverter] {}
	!MODULE[ProcessController],* {}
	!MODULE[Reliability],* {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 500 0 0
		}
		// Above this temp, risky
		NominalTemperature = 775
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.008

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 25

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 100
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000034414
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000034414
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[USI_Nuke_125]:NEEDS[SystemHeatFissionReactors]:FOR[zzzz_KerbalismSystemHeat]
{
	@cost = 54813
	@entryCost = 149800
	@category = Electrical
	@mass = 0.565

	@RESOURCE[EnrichedUranium]
	{
		@amount = 36
		@maxAmount = 36
	}

	@RESOURCE[DepletedFuel]
	{
		@amount = 0
		@maxAmount = 36
	}

	!RESOURCE[ElectricCharge] {}
	RESOURCE
	{
		name = ElectricCharge
		amount = 200
		maxAmount = 200
	}

	MODULE
	{
		name = ModuleSystemHeat
		volume = 1.0
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[USI_Converter] {}
	!MODULE[USI_ModuleFieldRepair] {}
	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
	!MODULE[ModuleResourceConverter] {}
	!MODULE[ProcessController],* {}
	!MODULE[Reliability],* {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 800 0 0
		}
		// Above this temp, risky
		NominalTemperature = 800
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.008

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit = 20

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 200
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000065205
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000065205
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[USI_Nuke_250]:NEEDS[SystemHeatFissionReactors]:FOR[zzzz_KerbalismSystemHeat]
{
	@cost = 236236
	@entryCost = 636400
	@category = Electrical
	@mass = 2.745

	@RESOURCE[EnrichedUranium]
	{
		@amount = 150
		@maxAmount = 150
	}

	@RESOURCE[DepletedFuel]
	{
		@amount = 0
		@maxAmount = 150
	}

	!RESOURCE[ElectricCharge] {}
	RESOURCE
	{
		name = ElectricCharge
		amount = 1000
		maxAmount = 1000
	}

	MODULE
	{
		name = ModuleSystemHeat
		volume = 2.0
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[USI_Converter] {}
	!MODULE[USI_ModuleFieldRepair] {}
	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
	!MODULE[ModuleResourceConverter] {}
	!MODULE[ProcessController],* {}
	!MODULE[Reliability],* {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 2700 0 0
		}
		// Above this temp, risky
		NominalTemperature = 850
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.008

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit = 15

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 1000
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0000027169
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.0000027169
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[USI_Nuke_375]:NEEDS[SystemHeatFissionReactors]:FOR[zzzz_KerbalismSystemHeat]
{
	@cost = 901125
	@entryCost = 1864000
	@category = Electrical
	@mass = 10.869

	@RESOURCE[EnrichedUranium]
	{
		@amount = 560
		@maxAmount = 560
	}

	@RESOURCE[DepletedFuel]
	{
		@amount = 0
		@maxAmount = 560
	}

	!RESOURCE[ElectricCharge] {}
	RESOURCE
	{
		name = ElectricCharge
		amount = 4000
		maxAmount = 4000
	}

	MODULE
	{
		name = ModuleSystemHeat
		volume = 2.0
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[USI_Converter] {}
	!MODULE[USI_ModuleFieldRepair] {}
	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeat] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
	!MODULE[ModuleResourceConverter] {}
	!MODULE[ProcessController],* {}
	!MODULE[Reliability],* {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 8000 0 0
		}
		// Above this temp, risky
		NominalTemperature = 900
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.008

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit = 10

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 4000
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.000010143
			FlowMode = NO_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.000010143
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}
